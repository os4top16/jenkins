#!groovy

@Library('jenkins') _

def tools = new org.devops.tools()


String workspace = "/opt/jenkins/workspace"

//Pipeline
pipeline {
    agent { node { label "master"   //指定运行节点的标签或者名称
                    customWorkspace "${workspace}"  //指定运行工作目录（可选）
            }
    }
    //已检查
    options {
        timestamps()  //日志会有时间
        skipDefaultCheckout()  //删除影式checkout scm语句
        disableConcurrentBuilds()   //禁止并行
        timeout(time: 1, unit: 'HOURS')  //流水线超时设置1h
    }
    stages {
        
        //下载代码
        stage("GetCode") {  //阶段名称
            // when { environment name: 'test', value: 'abcd' }
            steps {  //步骤
                timeout(time:5, unit:"MINUTES"){  //步骤超时时间
                    script{  //填写运行代码
                        println('获取代码')
                        // println("${test}")
                        // input id: 'Test', message: '我们是否要继续？', ok: '是，继续', parameters: [choice(choices: ['a', 'b'], description: '', name: 'test1')], submitter: 'duxiao,admin'
                        }

                }
            }
        }
        //imput示例
        // stage('Example') {
        //     input {
        //         message "Should we continue?"
        //         ok "Yes, we should."
        //         submitter "alice,bob"
        //         parameters {
        //             string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        //         }
        //     }
        //     steps {
        //         echo "Hello, ${PERSON}, nice to meet you."
        //     }
        // }
        //构建
        stage("Build"){
            steps{
                timeout(time:20, unit:"MINUTES"){
                    script{
                        println('应用打包')
                        mvnHome = tool "mvn"
                        println(mvnHome)
        
                        sh "${mvnHome}/bin/mvn --version"
                    }
                }
            }
        }

        //代码扫描
        stage("CodeScan"){
            steps{
                timeout(time:30,unit:"MINUTES"){
                    script{
                        println("代码扫描")
                        tools.println("This is my jenkins")
                    }
                }
            }
        }        
        
    }

    //构建后操作
    post {
        always {
            script{
                println("流水线")
            }
            // echo 'aa'
        }
        success {
            script{
                currentBuild.description += "\n 构建成功！"
            }
            // echo 'bb'
        }
        failure {
            script{
                currentBuild.description = "\n 构建失败！"
            }
            // echo 'cc'
        }
        aborted {
            script{
                currentBuild.description = "\n 构建取消！"
            }
            // echo 'dd'
        }
    }
}
